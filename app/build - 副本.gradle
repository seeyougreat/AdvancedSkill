plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    namespace 'tn.uu.advancedskill'
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        applicationId "tn.uu.advancedskill"
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0"

        //定义变量
        buildConfigField "String", "BUILD_TIME", getDateStr()
        buildConfigField "boolean", 'IS_TEST_MODE', "${isTestMode}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters "armeabi-v7a"
            }
        }

        ndk {
            abiFilters 'armeabi-v7a'
        }

    }

    android.applicationVariants.all { variant ->
//        if (variant.buildType.name == 'release') {
//            variant.outputs.all {
//                outputFileName = "App_tn_${versionName}_" + buildTime() + ".apk"
//            }
//        }
        variant.outputs.all {
            if (!isTestMode.toBoolean()) {
                outputFileName = "App_${variant.buildType.name}_${versionName}_" + buildTime() + ".apk"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            if (isTestMode.toBoolean()) {
                minifyEnabled false
            } else {
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation project(':baselibrary')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

//当前时间
static String buildTime() {
    def date = new Date()
    return date.format("MMdd_HHmm", TimeZone.getTimeZone("GMT+08:00"))
}

static String getDateStr() {
    return "\"" + buildTime() + "\"";
}


